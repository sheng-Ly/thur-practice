<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sheng.thur.practice.mapper.MemberMapper">
    <resultMap id="baseResultMap" type="Member">
        <id column="member_id" property="memberId"/>
        <result column="member_name" property="memberName"/>
        <result column="member_password" property="memberPassword"/>
        <result column="member_phone" property="memberPhone"/>
        <result column="member_email" property="memberEmail"/>
        <result column="member_create_time" property="memberCreateTime"/>
        <result column="member_grade" property="memberGrade"/>
        <result column="status" property="status"/>
        <association property="memberInfo" resultMap="com.sheng.thur.practice.mapper.MemberInfoMapper.baseResultMap"/>
    </resultMap>

    <sql id="base_Column_List">
        m.member_id, m.member_name, m.member_password, m.member_phone, m.member_email,
        m.member_create_time, m.member_grade, status
    </sql>

    <sql id="member_memberInfo_Column">
        m.member_id, m.member_name, m.member_password, m.member_phone, m.member_email,
        m.member_create_time, m.member_grade, m.status,
        mi.member_info_id, mi.member_info_realname, mi.member_info_Telephone,
        mi.member_info_sex, mi.member_info_address
    </sql>

    <select id="selectList" resultMap="baseResultMap">
        select
        <include refid="member_memberInfo_Column"/>
        from member m left join member_info mi on m.member_id = mi.member_id
        where m.status > -1
        limit #{index},#{rows}
    </select>

    <select id="selectByCondition" resultMap="baseResultMap">
        select
        <include refid="member_memberInfo_Column"/>
        from member m left join member_info mi on m.member_id = mi.member_id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            m.status > -1
            <if test="condition != null and condition != ''">
                and (member_name like concat('%',#{condition},'%')
                or member_phone like concat('%',#{condition},'%')
                or member_email like concat('%',#{condition},'%'))
            </if>
            <if test="startTime != null and startTime != ''">
                and member_create_time between #{startTime} and #{endTime}
            </if>
        </trim>
        limit #{index},#{rows}
    </select>

    <select id="selectStatusByPrimaryKey" resultMap="baseResultMap">
        select
        m.member_id, m.status
        from member m
        where m.member_id=#{memberId}
    </select>

    <update id="update">
        update member
        <trim prefix="SET" suffixOverrides=",">
            <if test="member.memberName != null and member.memberName != ''">
                member_name=#{member.memberName},
            </if>
            <if test="member.memberPassword != null and member.memberPassword != ''">
                member_password=#{member.memberPassword},
            </if>
            <if test="member.memberPhone != null and member.memberPhone != ''">
                member_phone=#{member.memberPhone},
            </if>
            <if test="member.memberEmail != null and member.memberEmail != ''">
                member_email=#{member.memberEmail},
            </if>
            <if test="member.memberGrade != null">
                member_grade=#{member.memberGrade},
            </if>
            <if test="member.status != null">
                status=#{member.status},
            </if>
        </trim>
        where member_id=#{member.memberId}
    </update>

    <insert id="insert" keyColumn="member_id" keyProperty="memberId" useGeneratedKeys="true">
        insert into member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="member.memberName != null and member.memberName != ''">
                member_name,
            </if>
            <if test="member.memberPassword != null and member.memberPassword != ''">
                member_password,
            </if>
            <if test="member.memberPhone != null and member.memberPhone != ''">
                member_phone,
            </if>
            <if test="member.memberEmail != null and member.memberEmail != ''">
                member_email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="member.memberName != null and member.memberName != ''">
                #{member.memberName},
            </if>
            <if test="member.memberPassword != null and member.memberPassword != ''">
                #{member.memberPassword},
            </if>
            <if test="member.memberPhone != null and member.memberPhone != ''">
                #{member.memberPhone},
            </if>
            <if test="member.memberEmail != null and member.memberEmail != ''">
                #{member.memberEmail},
            </if>
        </trim>
    </insert>

    <update id="deleteMember">
        update member m
        set m.status=-1
        where m.member_id=#{memberId}
    </update>
</mapper>